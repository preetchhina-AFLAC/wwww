def initDiscussionDB():
    conn = sqlite3.connect("discussion.db")
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS posts (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    user TEXT DEFAULT 'Anonymous',
                    role TEXT DEFAULT 'General User',
                    content TEXT NOT NULL,
                    timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                    likes INTEGER,
                    dislikes INTEGER
                  
                )
                ''')
    conn.commit()
    conn.close()
#Add Posts to Discussion
def addPost(user, role, content):
    conn = sqlite3.connect("discussion.db")
    cursor = conn.cursor()
    cursor.execute("INSERT INTO posts (user, role, content) VALUES (?, ?, ?)", 
                   (user or " ", role or "User", content))
    conn.commit()
    conn.close()

# Retrieve posts (with optional search)
def getPosts(searchQuery=""):
    conn = sqlite3.connect("discussion.db")
    if searchQuery:
        query = "SELECT * FROM posts WHERE content LIKE ? ORDER BY timestamp DESC"
        df = pd.read_sql_query(query, conn, params=('%' + searchQuery + '%',))
    else:
        df = pd.read_sql_query("SELECT * FROM posts ORDER BY timestamp DESC", conn)
    conn.close()
    return df

# Delete a post
def deletePost(postID):
    conn = sqlite3.connect("discussion.db")
    cursor = conn.cursor()
    cursor.execute("DELETE FROM posts WHERE id = ?", (postID,))
    conn.commit()
    conn.close()

def updateReaction(postID, likes=False, dislikes=False ):
    conn = sqlite3.connect("discussion.db")
    cursor = conn.cursor()
    cursor.execute(f"UPDATE posts SET {likes} = {likes + 1} + 1 WHERE postid = {postID}")
    cursor.execute(f"UPDATE posts SET {dislikes} = {dislikes + 1} + 1 WHERE postid = {postID}")
    conn.commit()
    conn.close()
def getReaction(postID):
    conn = sqlite3.connect("discussion.db")
    cursor = conn.cursor()
    cursor.execute(f"Select likes, dislikes FROM feedback WHERE postID = {postID}")
    result = cursor.fetchone()
    return result if result else(0,0)
